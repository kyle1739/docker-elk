input {
  kafka { 
    bootstrap_servers => "35.194.209.234:9092,35.194.209.234:9093,35.194.209.234:9094"
    consumer_threads => 10
    decorate_events => false
    topics => ["nginx"]
    group_id => "nginx"
  }
}

filter {
    json { source => "message"
           }
    mutate { remove_field => ["@version","agent","input"]
          }
    if [fields][logsource] == "nginx_access" {       
   	 geoip {
	     source => "client_ip"
	     database => "/usr/share/logstash/GeoLite2-City.mmdb"
	     add_field => [ "[geoip][coordinates]", "%{[geoip][longitude]}" ]
	     add_field => [ "[geoip][coordinates]", "%{[geoip][latitude]}"  ]	
	     remove_field => ["[geoip][latitude]","[geoip][longitude]","[geoip][country_code]","[geoip][country_code2]","[geoip][country_code3]","[geoip][timezone]","[geoip][continent_code]","[geoip][region_code]"]
	}
	
	 if [http_user_agent] != "-" {
	 useragent {
	     source => "http_user_agent"
	     target => "ua"
	     remove_field => [ "[ua][minor]","[ua][major]","[ua][build]","[ua][patch]","[ua][os_minor]","[ua][os_major]" ]
	 }
     }	
 	 mutate {
	     convert => [ "size", "integer" ]
	     convert => [ "status", "integer" ]
	     convert => [ "responsetime", "float" ]
	     convert => [ "upstreamtime", "float" ]
 	     convert => [ "[geoip][coordinates]", "float" ]
     	     remove_field => [ "ecs","agent","host","cloud","@version","input","logs_type" , "http_user_agent"]
	 }
	 if "_geoip_lookup_failure" in [tags] { drop { } }
	 mutate { remove_field => ["message"]
          }
      }
    if [fields][logsource] == "nginx_error" {
        
#       multiline {
#            pattern => "(?<timestamp>\d{4}/\d{2}/\d{2}\s{1,}\d{2}:\d{2}:\d{2})\s{1,}"
#            negate => true
#            what => "previous"
#        }
	grok {
               match => { "message" => "(?<timestamp>\d{4}/\d{2}/\d{2}\s{1,}\d{2}:\d{2}:\d{2})\s{1,}\[%{DATA:log_level}\]\s{1,}(%{NUMBER:pid:int}#%{NUMBER}:\s{1,}\*%{NUMBER}|\*%{NUMBER}) %{GREEDYDATA:error_message}(?<error_message>(.|\r|\n)*)(?:,\s{1,}client:\s{1,}(?<client>%{IP}|%{HOSTNAME}))(?:,\s{1,}server:\s{1,}%{IPORHOST:server})(?:, request: %{QS:request})?(?:, upstream: %{QS:upstream})?(?:, host: %{QS:host})?(?:, host: %{QS:host})?(?:, referrer: \"%{URI:referrer})?"}
 	}
#        mutate { remove_field => ["message"]
#         }
   }

}
output {
  if [fields][env] == "prod_flybit_access" {
    elasticsearch {
      hosts => ["http://10.88.0.42:9200", "http://10.88.0.51:9200", "http://10.88.0.60:9200"]
      index => "logstash-prod-nginx-access-log-%{+YYYY.MM.dd}"
      user => "elastic"
      password => "aa123456"
    }
  }
  if [fields][env] == "prod_flybit_error" {
    elasticsearch {
      hosts => ["http://10.88.0.42:9200", "http://10.88.0.51:9200", "http://10.88.0.60:9200"]
      index => "logstash-prod-nginx-error-log-%{+YYYY.MM.dd}"
      user => "elastic"
      password => "aa123456"
    }
  }
  if [fields][env] == "prod_gg_access" {
    elasticsearch {
      hosts => ["http://10.88.0.42:9200", "http://10.88.0.51:9200", "http://10.88.0.60:9200"]
      index => "logstash-prod-nginx-access-log-%{+YYYY.MM.dd}"
      user => "elastic"
      password => "aa123456"
    }
  }
  if [fields][env] == "prod_gg_error" {
    elasticsearch {
      hosts => ["http://10.88.0.42:9200", "http://10.88.0.51:9200", "http://10.88.0.60:9200"]
      index => "logstash-prod-nginx-error-log-%{+YYYY.MM.dd}"
      user => "elastic"
      password => "aa123456"
    }
  }
  if [fields][env] == "prod_proex_access" {
    elasticsearch {
      hosts => ["http://10.88.0.42:9200", "http://10.88.0.51:9200", "http://10.88.0.60:9200"]
      index => "logstash-prod-nginx-access-log-%{+YYYY.MM.dd}"
      user => "elastic"
      password => "aa123456"
    }
  }
  if [fields][env] == "prod_proex_error" {
    elasticsearch {
      hosts => ["http://10.88.0.42:9200", "http://10.88.0.51:9200", "http://10.88.0.60:9200"]
      index => "logstash-prod-nginx-error-log-%{+YYYY.MM.dd}"
      user => "elastic"
      password => "aa123456"

    }
  }
}
